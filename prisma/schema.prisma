// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  name           String    @unique
  password       String
  sessionVersion Int       @default(0)
  crags          Crag[]
  comments       Comment[]
  visits         Visit[]
  photos         Photo[]
}

model Crag {
  id       Int       @id @default(autoincrement())
  name     String
  content  String
  author   User?     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int?
  comments Comment[]
  visits   Visit[]
  photos   Photo[]
}

model Visit {
  id       Int     @id @default(autoincrement())
  crag     Crag?   @relation(fields: [cragId], references: [id], onDelete: Cascade)
  cragId   Int?
  author   User?   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int?
  photos   Photo[]
}

model Comment {
  id       Int    @id @default(autoincrement())
  content  String
  author   User?  @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int?
  crag     Crag?  @relation(fields: [cragId], references: [id], onDelete: Cascade)
  cragId   Int?
}

model Photo {
  id       Int    @id @default(autoincrement())
  name     String
  path     String
  size     Int
  visit    Visit? @relation(fields: [visitId], references: [id], onDelete: Cascade)
  visitId  Int?
  crag     Crag?  @relation(fields: [cragId], references: [id], onDelete: Cascade)
  cragId   Int?
  author   User?  @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int?
}
